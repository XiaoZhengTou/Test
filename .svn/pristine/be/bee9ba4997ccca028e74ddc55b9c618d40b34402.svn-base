/**
 * Created by chao on 2016/6/21.
 */
define(['angular'], function(angular) {
	var app = angular.module('mdorganization', []);
	//组织架构
	app.directive('drorganization', ['$mdMedia', '$mdDialog', '$http', '$parse', 'publicmodel', function($mdMedia, $mdDialog, $http, $parse, publicmodel) {
		return {
			link: function(scope, element, attrs) {
				function bindData(event) {
					var modeldata = scope.$eval(attrs.drorganization);
					console.log(modeldata.model);
					$mdDialog.show({
						controller: DialogController,
						templateUrl: 'templates/shared/organization.html',
						parent: angular.element(document.body),
						targetEvent: event,
						clickOutsideToClose: true,

					}).then(function(answer) {
						//截取传过来的ng-model
						//$parse(modeldata.model).assign(scope, answer);
						if(answer) {
							//获取值
							var parsevalue = $parse(modeldata.model)(scope);
							console.log(parsevalue);
							if(angular.isArray(parsevalue)) {
								//判断数据中是否已经存在重复
								for(var value in parsevalue) {
									if(parsevalue[value].user_id == answer.user_id) {
										return;
									}
								}
								parsevalue.push(answer);
								$parse(modeldata.model).assign(scope, parsevalue);
							} else {
								$parse(modeldata.model).assign(scope, answer);
							}
							console.log($parse(modeldata.model)(scope));
						}
					}, function() {

					});

					function DialogController($scope, $mdDialog) {
						$scope.hide = function() {
							$mdDialog.hide();
						};
						$scope.cancel = function() {
							$mdDialog.cancel();
						};
						$scope.answer = function(answer) {
							$mdDialog.hide(answer);
						};

						$scope.getDate = function(pid) {
							// pid=(pid==null?"":pid;
							console.log(pid);
							var url = organizationUrl + 'docker/tenantorg/queryOrgUsersByOrgId?org_id=' + pid;
							console.log(publicmodel.Token);
							//$http.defaults.headers.common["x-auth-token"] = publicmodel.TokenOrg;
							$http({
								method: 'GET',
								url: url,
								headers: {
									'x-auth-token': sessionStorage.Token
								},
							}).success(function(data, status, headers, config) {
								console.log(data);
								if(data.code == "0000") {
									$scope.orgData = data;
								} else {
									$mdDialog.show(
										$mdDialog.alert()
										.parent(angular.element(document.body))
										.clickOutsideToClose(true)
										.title('提示信息')
										.textContent('访问服务器异常：' + data.code + data.msg)
										.ariaLabel('提示信息')
										.ok('确定')
									);
								}
							}).error(function(data, status, headers, config) {});

						}
						$scope.getDate("");
						$scope.onSearch = function(key) {
							if(key) {
								key = encodeURIComponent(encodeURIComponent(key));
								if(key) {
									var url = organizationUrl + 'docker/userinfo/queryUserListByName?user_name=' + key;
									console.log(url);
									$http({
										method: 'GET',
										url: url,
										headers: {
											'x-auth-token': sessionStorage.Token
										},
									}).success(function(data, status, headers, config) {
										console.log(data);
										$scope.orgData = {
											data: {
												users: data.data.list,
											}
										};
										console.log($scope.orgData);
									}).error(function(data, status, headers, config) {});
								}
							} else {
								$scope.getDate("");
							}

						}

					}
				};
				angular.element(element[0]).unbind('click');
				angular.element(element[0]).bind('click', bindData);
			}
		}
	}]);
	app.directive('drOrganizationext', ['$mdMedia', '$mdDialog', '$http', '$parse', function($mdMedia, $mdDialog, $http, $parse) {
		return {
			//replace: true,
			scope: {
				userlist: '='
			},
			restrict: 'A',
			//priority: 100,
			//template: '<span><a href="" ng-click="bindData($event)">[添加]</a><span>',
			link: function($scope, element, attrs) {
				function bindData() {
					$mdDialog.show({
						controller: DialogController,
						templateUrl: 'templates/shared/organization.html',
						parent: angular.element(document.body),
						clickOutsideToClose: true,

					}).then(function(answer) {
						//console.log($scope.userlist);
						//if(answer && $scope.userlist && angular.isArray($scope.userlist)) {
						//	for(var i in $scope.userlist) {
						//   	if($scope.userlist[i].user_id == answer.user_id) {
						//			return;
						//			}
						//	}
						//console.log("数组");
						if(!$scope.userlist) {
							$scope.userlist = [];
						}
						$scope.userlist.push(answer);
						//} else {
						//	console.log("非数组");
						//		$scope.userlist = answer;
						//}
					}, function() {

					});

					function DialogController($scope, $mdDialog) {
						$scope.hide = function() {
							$mdDialog.hide();
						};
						$scope.cancel = function() {
							$mdDialog.cancel();
						};
						$scope.answer = function(answer) {
							$mdDialog.hide(answer);
						};

						$scope.getDate = function(pid) {
							var url = organizationUrl + 'docker/tenantorg/queryOrgUsersByOrgId?org_id=' + pid;
							$http({
								method: 'GET',
								url: url,
								headers: {
									'x-auth-token': sessionStorage.Token
								},
							}).success(function(data, status, headers, config) {
								console.log(data);
								if(data.code == "0000") {
									$scope.orgData = data;
								} else {
									$mdDialog.show(
										$mdDialog.alert()
										.parent(angular.element(document.body))
										.clickOutsideToClose(true)
										.title('提示信息')
										.textContent('访问服务器异常：' + data.code + data.msg)
										.ariaLabel('提示信息')
										.ok('确定')
									);
								}
							}).error(function(data, status, headers, config) {});

						}
						$scope.getDate("");
						$scope.onSearch = function(key) {
							if(key) {
								key = encodeURIComponent(encodeURIComponent(key));
								if(key) {
									var url = organizationUrl + 'docker/userinfo/queryUserListByName?user_name=' + key;
									console.log(url);
									$http({
										method: 'GET',
										url: url,
										headers: {
											'x-auth-token': sessionStorage.Token
										},
									}).success(function(data, status, headers, config) {
										console.log(data);
										$scope.orgData = {
											data: {
												users: data.data.list,
											}
										};
										console.log($scope.orgData);
									}).error(function(data, status, headers, config) {});
								}
							} else {
								$scope.getDate("");
							}

						}

					}
				};
				//$scope.bindData();
				angular.element(element[0]).unbind('click');
				angular.element(element[0]).bind('click', bindData);
			}
		}
	}]);
	return app;
});